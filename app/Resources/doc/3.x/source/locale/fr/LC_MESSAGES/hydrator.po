# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, CCM Benchmark Group
# This file is distributed under the same license as the ting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: ting 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-03-12 10:01+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../hydrator.rst:5
msgid "Les hydrateurs"
msgstr ""

#: ../../hydrator.rst:9
msgid "Au sujet des hydrateurs"
msgstr ""

#: ../../hydrator.rst:10
msgid ""
"L'hydrateur va être chargé de transformer le résultat d'une requête SQL "
"dans les objets qui ont été configurés dans les metadata par "
"l'intermédiaire du :doc:`Repository <repository>`"
msgstr ""

#: ../../hydrator.rst:15
msgid "L'hydrateur par défaut"
msgstr ""

#: ../../hydrator.rst:16
msgid ""
"L'hydrateur par défaut va retourner pour chaque ligne un tableau "
"associatif avec pour clé le nom de la table (ou l'alias utilisé) et pour "
"valeur l'objet qu'il a réussi à créer par rapport aux metadata."
msgstr ""

#: ../../hydrator.rst:39 ../../hydrator.rst:177 ../../hydrator.rst:348
#: ../../hydrator.rst:391 ../../hydrator.rst:433 ../../hydrator.rst:475
msgid "La collection retournée est composée de lignes structurées ainsi :"
msgstr ""

#: ../../hydrator.rst:55
msgid "Jointure avec aucune donnée"
msgstr ""

#: ../../hydrator.rst:56
msgid ""
"Lorsque la jointure ne retourne aucune donnée, la clé 'c' aura pour "
"valeur null"
msgstr ""

#: ../../hydrator.rst:61
msgid "L'hydrateur pour un seul objet"
msgstr ""

#: ../../hydrator.rst:62
msgid ""
"L'hydrateur par défaut est optimisé pour retourner plusieurs objets, "
"lorsque l'on fait une requête qui n'a pour but que de retourner un objet,"
" il n'est pas des plus appropriés."
msgstr ""

#: ../../hydrator.rst:65
msgid ""
"Vous pouvez injecter "
"``CCMBenchmark\\Ting\\Repository\\HydratorSingleObject`` qui conviendra "
"mieux à votre besoin."
msgstr ""

#: ../../hydrator.rst:88
msgid "La collection retournée est une collection d'objet User."
msgstr ""

#: ../../hydrator.rst:93
msgid "L'hydrateur d'aggrégation"
msgstr ""

#: ../../hydrator.rst:97
msgid "Disponible uniquement à partir de la version 3.3"
msgstr ""

#: ../../hydrator.rst:101
msgid ""
"Déprécié en 3.5, ce dernier à été remplacé par l':ref:`hydrateur "
"relationnel <l-hydrateur-relationnel>`"
msgstr ""

#: ../../hydrator.rst:103
msgid ""
"Celui-ci permet d'aggréger un ensemble de résultats, par exemple "
"retourner une collection d'objet ``User`` et que chaque objet ``User`` "
"ait la liste de tous les livres possédés par ce dernier."
msgstr ""

#: ../../hydrator.rst:105
msgid "Voici un exemple d'utilisation"
msgstr ""

#: ../../hydrator.rst:144 ../../hydrator.rst:260
msgid "Rentrons un peu dans les détails :"
msgstr ""

#: ../../hydrator.rst:152
msgid ""
"La closure injectée via ``callableIdIs`` permet de retourner "
"l'identifiant qui sera utilisé comme clé d'aggrégation (ici l'identifiant"
" de l'utilisateur)"
msgstr ""

#: ../../hydrator.rst:156
msgid ""
"Il est très important d'effectuer un tri dans votre requête SQL sur cette"
" clé d'aggrégation sinon vous aurez des résultats partiels."
msgstr ""

#: ../../hydrator.rst:164
msgid ""
"La closure injectée via ``callableDataIs`` permet de retourner la donnée "
"qui doit être aggrégée (ici un Livre)"
msgstr ""

#: ../../hydrator.rst:173
msgid ""
"Cette dernière partie est facultative, si elle est omise, le résultat de "
"l'aggrégation se trouvera dans la clé ``aggregate`` de la collection. "
"Elle vous permet d'effectuer une opération de finalisation et de choisir "
"ce que vous voulez faire des données qui viennent d'être aggrégées, ici "
"il s'agit d'une liste de livres que nous injectons dans l'utilisateur via"
" la méthode ``setBooks``"
msgstr ""

#: ../../hydrator.rst:202
msgid "L'hydrateur relationnel"
msgstr ""

#: ../../hydrator.rst:206
msgid "Disponible uniquement à partir de la version 3.5"
msgstr ""

#: ../../hydrator.rst:208
msgid ""
"Celui-ci permet d'aggréger un ensemble de résultats sur N niveaux, par "
"exemple retourner une collection d’objet ``User`` et que chaque objet "
"``User`` ait la liste de tous les livres possédés par ce dernier, qui eux"
" même ont un objet ``Author``."
msgstr ""

#: ../../hydrator.rst:211
msgid "Voici un exemple d’utilisation"
msgstr ""

#: ../../hydrator.rst:258
msgid ""
"Cet hydration va parcourir toutes les lignes retournées par votre requête"
" et les hydrater, vous ne bénéficiez plus d'une lazy hydration."
msgstr ""

#: ../../hydrator.rst:270
msgid ""
"On ajoute une relation du type many qui consiste à injecter les objets "
"``Book`` dans l'objet ``User`` par la méthode ``setBooks``"
msgstr ""

#: ../../hydrator.rst:279
msgid ""
"Cette dernière partie est facultative, dans cet exemple si elle est "
"omise, le résultat sera le suivant :"
msgstr ""

#: ../../hydrator.rst:290
msgid ""
"Si cependant le callable est présent, la collection retournée sera la "
"suivante :"
msgstr ""

#: ../../hydrator.rst:323
msgid "Données sans metadata"
msgstr ""

#: ../../hydrator.rst:324
msgid ""
"Si vous effectuez une requête qui retourne des données qui ne "
"correspondent à aucune metadata, que ce soit une colonne d'aggrégation "
"comme ``SUM(price)`` ou une colonne qui n'a pas été mappée comme "
"``my_extra_column`` l'hydrateur va créer un objet ``stdClass`` avec des "
"propriétés correspondant à ces colonnes."
msgstr ""

#: ../../hydrator.rst:328
msgid "Cet objet ``stdClass`` est accessible dans la clé 0 du tableau retourné."
msgstr ""

#: ../../hydrator.rst:364
msgid "Mapper des données sans metadata"
msgstr ""

#: ../../hydrator.rst:365
msgid ""
"Dans le cas d'une colonne d'aggrégation, on peut souhaiter la mapper dans"
" un objet. Pour mapper la colonne ``nb_books`` dans mon model User via la"
" méthode ``setNbBooks`` il suffit de faire :"
msgstr ""

#: ../../hydrator.rst:404
msgid "Déserializer des données sans metadata"
msgstr ""

#: ../../hydrator.rst:405
msgid ""
"Pour rappel l'action de déserializer consiste à transformer un type de "
"base données dans un type PHP. Par exemple si on récupère une date qui "
"n'est pas dans des metadata, on peut vouloir transformer la date en objet"
" ``Datetime``."
msgstr ""

#: ../../hydrator.rst:448
msgid "Composition d'objet"
msgstr ""

#: ../../hydrator.rst:449
msgid ""
"On peut vouloir faire de la composition d'objet, injecter un objet dans "
"un autre et ce sur plusieurs niveaux. Pour mapper l'objet ``Country`` "
"(qui a l'alias ``co``) dans mon model ``City`` (qui a l'alias ``cit``) "
"via la méthode ``setCountry`` il suffit de faire :"
msgstr ""

#~ msgid ""
#~ "Celui-ci permet d'aggréger un ensemble"
#~ " de résultats, par exemple retourner "
#~ "une collection d'objet User et que "
#~ "chaque objet User ait la liste de"
#~ " tous les livres possédés par ce "
#~ "dernier."
#~ msgstr ""

